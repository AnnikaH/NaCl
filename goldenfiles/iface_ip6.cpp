// This file is a part of the IncludeOS unikernel - www.includeos.org
//
// Copyright 2017-2018 IncludeOS AS, Oslo, Norway
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Autogenerated by NaCl

#include <iostream>
#include <net/interfaces>
#include <net/ip4/cidr.hpp>
#include <syslogd>

using namespace net;

namespace nacl {
  class Filter {
  public:
    virtual Filter_verdict<IP4> operator()(IP4::IP_packet_ptr pckt, Inet& stack, Conntrack::Entry_ptr ct_entry) = 0;
    virtual ~Filter() {}
  };
}

void register_plugin_nacl() {
	INFO("NaCl", "Registering NaCl plugin");

	auto& eth2 = Interfaces::get(2);
	eth2.autoconf_v6(0, [&eth2] (bool complete) {
		if (!complete) {
			INFO("NaCl plugin interface eth2", "SLAAC did not complete (%s) - falling back to static configuration", eth2.ifname().c_str());
			eth2.network_config6(IP6::addr{0x1280, 0xfe80, 0x0000, 0x0000, 0x0202, 0xb3ff, 0xfe1e, 0x8329}, 64, IP6::addr{0x1280, 0xfe80, 0x0000, 0x0000, 0x0202, 0xb3ff, 0xfe1e, 0x9000});
		}
	});
	auto& eth1 = Interfaces::get(1);
	eth1.network_config(IP4::addr{10,0,0,46}, IP4::addr{255,255,255,0}, IP4::addr{10,0,0,1});
	eth1.autoconf_v6(0, [&eth1] (bool complete) {
		if (!complete) {
			INFO("NaCl plugin interface eth1", "SLAAC did not complete (%s). Nothing to do.", eth1.ifname().c_str());
			return;
		}
		INFO("NaCl plugin interface eth1", "IP address updated: %s", eth1.ip6_addr().str().c_str());
	});
	auto& eth0 = Interfaces::get(0);
	eth0.network_config(IP4::addr{10,0,0,45}, IP4::addr{255,255,255,0}, IP4::addr{10,0,0,1});
	eth0.network_config6(IP6::addr{0x1280, 0xfe80, 0x0000, 0x0000, 0x0202, 0xb3ff, 0xfe1e, 0x8328}, 64, IP6::addr{0x1280, 0xfe80, 0x0000, 0x0000, 0x0202, 0xb3ff, 0xfe1e, 0x9000});

}
